## PythonDataScience
## 03.11-Working-with-Time-Series

1.
from datetime import datetime
from datetime import date, time
import pytz ## 
dir(datetime)
x = datetime(year=2020, month=1, day=1)
x
print(x)
print(x.date())
print(x.time())
x.strftime('%A') ## %a; %B; %b ...
datetime.utcnow()
datetime.now()
datetime.now().strftime('%A')
datetime.utcnow().date() ## .time()
datetime.now().date() ## .time()
datetime.utcnow().hour
datetime.now().hour

2.
from dateutil.parser import parse
d2 = parse("4th of July, 2020")
d2
print(d2)
df['date'] = df['date'].apply(parse, dayfirst=True)

3.
import numpy as np
d3 = np.array('2121-01-02')
d3
print(d3)
d3 + +1
d3 + np.arange(2)
np.datetime64('2123-2-4')
np.datetime64('2121-2-9 12:12')
np.datetime64('2015-07-04 12:59:59.50', 'ns')

4.
import pandas as pd
pdate = pd.to_datetime("5th of July, 2111")
print(pdate)
pdate.strftime("%A")
pdate + pd.to_timedelta(np.arange(4), 'D')

pdate2 = pd.to_datetime([datetime(2015, 7, 3), '4th of July, 2015', '2015-Jul-6', '07-07-2015', '20150708']
pdate2                  ## => DatetimeIndex object
pdate2.to_period('D')   ## => PeriodIndex object
pdate2 - pdate2[0]      ## => TimedeltaIndex object
TimedeltaIndex(['0 days', '1 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq=None)

index = pd.DatetimeIndex(['2014-07-04', '2014-08-04','2015-07-04', '2015-08-04'])
s1 = pd.Series([0, 1, 2, 3], index=index)
s1

pd.date_range('2015-07-03', '2015-07-10')
pd.date_range('2015-07-03', periods=8)
pd.date_range('2015-07-03', periods=8, freq='H')
pd.period_range('2015-07', periods=8, freq='M')
pd.timedelta_range(0, periods=10, freq='H')
pd.timedelta_range(0, periods=9, freq="2H30T")

5. ...
Resampling, Shifting, and Windowing
Resampling and converting frequencies
Time-shifts
Rolling windows

# !curl -o FremontBridge.csv https://data.seattle.gov/api/views/65db-xm6k/rows.csv?accessType=DOWNLOAD
data = pd.read_csv('FremontBridge.csv', index_col='Date', parse_dates=True)
...
data.columns = ['West', 'East']
data['Total'] = data.eval('West + East')